name: CD - Deploy Backend

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - narendran-branch
    paths:
      - backend/**

jobs:
  deploy:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: codeNaren
          POSTGRES_PASSWORD: password
          POSTGRES_DB: databasehashtag
        ports:
          - 5433:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    defaults:
      run:
        working-directory: ./backend

    steps:
      - name: Sending slack message
        run: >
          curl && curl -X POST -H 'Content-type: application/json' 
          --data '{"text":"DEPLOYMENT HAS STARTED :progress_bar: :fingers_crossed:"}'
          ${( secrets.SLACK_WEBHOOK_URL)}
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{secrets.DOCKERHUB_USERNAME}}
          password: ${{secrets.DOCKERHUB_ACCESS_TOKEN}}
      - name: Set Build number
        id: build-number
        run: echo "BUILD_NUMBER=$(date '+%d.%m.%Y.%H.%M.%S')" >> $GITHUB_OUTPUT
      - name: Sending slack message
        run: > 
          curl && curl -X POST -H 'Content-type: application/json'
          --data '{"text":"Building with Maven :maven:"}'
          ${( secrets.SLACK_WEBHOOK_URL)}

      - name: Build Package push with maven
        run: mvn -ntp -B verify -Ddocker.image.tag=${{steps.build-number.outputs.BUILD_NUMBER}} jib:build
      - name: Sending slack message
        run: >
          curl && curl -X POST -H 'Content-type: application/json'
          --data '{"text":":docker: Image: ${{steps.build-number.outputs.BUILD_NUMBER}} pushed here https://hub.docker.com/repository/docker/codenaren/hashtag-net"}'
          ${( secrets.SLACK_WEBHOOK_URL)}

      - name: Update Dockerrun.aws.json (api imagetag) with new Build Number
        run: |
          echo "Dockerrun.aws.json before updating tag"
          cat Dockerrun.aws.json
          sed -i -E 's_(codenaren/hashtag-net:)([^"]*)_\1'${{steps.build-number.outputs.BUILD_NUMBER}}'_' Dockerrun.aws.json
          echo "Dockerrun.aws.json after updating tag"
          cat Dockerrun.aws.json

      - name: Deploy to Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v21
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: ${{ secrets.ELASTIC_BEANSTALK_APPLICATION_NAME }}
          environment_name: ${{ secrets.ELASTIC_BEANSTALK_ENVIRONMENT_NAME }}
          version_label: ${{ steps.build-number.outputs.BUILD_NUMBER }}
          version_description: ${{ github.SHA }}
          region: ${{ secrets.ELASTIC_BEANSTALK_ENVIRONMENT_REGION }}
          deployment_package: backend/Dockerrun.aws.json
      - name: Sending slack message
        run: >
          curl && curl -X POST -H 'Content-type: application/json'
          --data '{"text":":aws: Starting deployment to Elastic Beanstalk - :beanstalk:"}'
          ${( secrets.SLACK_WEBHOOK_URL)}
      - name: Sending slack message
        run: >
          curl && curl -X POST -H 'Content-type: application/json'
          --data '{"text":"Committing and pushing stuff to github Repo - https://github.com/nd199/spring-boot-hashtag"}'
          ${( secrets.SLACK_WEBHOOK_URL)}

      - name: commit and push Dockerrun.aws.json
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git commit -m "Updating Dockerrun.aws.json docker image with new tag ${{ steps.build-number.outputs.BUILD_NUMBER }} "
          git push
          
      - name: Sending slack message
        run: >
          curl && curl -X POST -H 'Content-type: application/json'
          --data '{"text":"Deployment completed to - http://hashtag-env.eba-bufc46pq.ap-south-1.elasticbeanstalk.com/"}'
          ${( secrets.SLACK_WEBHOOK_URL)}
          
      - name: Sending slack message
        if: always()
        run: >
          curl && curl -X POST -H 'Content-type: application/json'
          --data '{"text":"JOB STATUS ${{job.status}}"}'
          ${( secrets.SLACK_WEBHOOK_URL)}